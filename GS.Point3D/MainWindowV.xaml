<!--
    /* Copyright(C) 2021  Rob Morgan (robert.morgan.e@gmail.com)
This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published
by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see<https: //www.gnu.org/licenses/> .
*/-->
    <Window x:Class="GS.Point3D.MainWindowV"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:local="clr-namespace:GS.Point3D"
            xmlns:controls="clr-namespace:GS.Point3D.Controls" 
            xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes" xmlns:mdc="clr-namespace:MaterialDesignColors;assembly=MaterialDesignColors"
            xmlns:cvt="clr-namespace:GS.Point3D.Converters"
            xmlns:domain="clr-namespace:GS.Point3D.Domain"
            xmlns:helpers="clr-namespace:GS.Point3D.Helpers"
            mc:Ignorable="d" Title="GS Server" FontStretch="Normal" TextElement.FontSize="14" 
            ResizeMode="CanResizeWithGrip" WindowStyle="None" TextOptions.TextFormattingMode="Display" 
            FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto" 
            d:DataContext="{d:DesignInstance local:MainWindowVM, IsDesignTimeCreatable=True}" 
            TextElement.Foreground="{DynamicResource MaterialDesignBody}" 
            WindowState="{Binding WindowStates}" 
            Height="{Binding WindowHeight, Mode=TwoWay}" 
            Width="{Binding WindowWidth, Mode=TwoWay}" 
            Left="{Binding WindowLeft, Mode=TwoWay}" 
            Top="{Binding WindowTop, Mode=TwoWay}" 
            Closed="MainWindow_OnClosed" Topmost="{Binding TopMost}">
    <WindowChrome.WindowChrome>
        <WindowChrome ResizeBorderThickness="6" CaptionHeight="30" CornerRadius="5,5,5,5" GlassFrameThickness="1">
        </WindowChrome>
    </WindowChrome.WindowChrome>
    <Window.Resources>
        <cvt:InverseBooleanConverter x:Key="InvBol" />
        <cvt:ColorToBrushConverter x:Key="ColorToBrush" />
        <cvt:BoolToVisClapConverter x:Key="BoolToClap" />
    </Window.Resources>
    <Grid Background="{DynamicResource MaterialDesignPaper}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <controls:WindowTitleBarBasic Grid.Row="0" />
        <md:DialogHost Grid.Row="1" CloseOnClickAway="True" IsOpen="{Binding IsDialogOpen}" DialogContent="{Binding DialogContent}">
            <Grid>
                <md:DrawerHost BorderThickness="2" IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}" BorderBrush="{DynamicResource MaterialDesignDivider}" >
                    <md:DrawerHost.LeftDrawerContent>
                        <Grid Width="450" ShowGridLines="False">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40" />
                                <RowDefinition Height="40" />
                                <RowDefinition Height="40" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="50" />
                                <RowDefinition Height="60" />
                                <RowDefinition Height="60" />
                                <RowDefinition Height="60" />
                                <RowDefinition Height="50" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0" Grid.Column="0">
                                <ToggleButton DockPanel.Dock="Top" HorizontalAlignment="Left" Margin="5" Style="{StaticResource MaterialDesignHamburgerToggleButton}" Command="{x:Static md:DrawerHost.CloseDrawerCommand}" CommandParameter="{x:Static Dock.Left}" ToolTip="{StaticResource dSettings}" IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked, Mode=TwoWay}" />
                                <Label HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18" Foreground="{DynamicResource PrimaryHueMidBrush}" Content="{StaticResource dSettings}"/>
                            </Grid>
                            <StackPanel Grid.Row="1" Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center" IsEnabled="{Binding Connected, Converter={StaticResource InvBol}}">
                                <Label VerticalAlignment="Bottom" Content="{StaticResource Telescope}" ContentStringFormat='{}{0}:'/>
                                <Button VerticalAlignment="Bottom" HorizontalAlignment="Left" Content="{StaticResource Select}" ToolTip="{StaticResource Chooser}" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickChooserCmd}" />
                                <Label VerticalAlignment="Bottom" Width="290" Content="{Binding TelescopeID}" />
                            </StackPanel>
                            <StackPanel Grid.Row="2" Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                <Label VerticalAlignment="Bottom" Content="{StaticResource Connect}" ContentStringFormat='{}{0}:' />
                                <md:Badged Badge="{Binding ConnectBadgeContent}" BadgePlacementMode="TopRight" VerticalAlignment="Bottom" ToolTip="{StaticResource On}">
                                    <Button ToolTip="{StaticResource Connect}" VerticalAlignment="Bottom" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickConnectCmd}" >
                                        <md:PackIcon Kind="Telescope" Height="25" Width="25"/>
                                    </Button>
                                </md:Badged>
                                <Label Margin="20,0,0,0" Content="{StaticResource Auto}" VerticalAlignment="Bottom" ContentStringFormat='{}{0}:' />
                                <ToggleButton Margin="5,0,0,3" VerticalAlignment="Bottom" ToolTip="{StaticResource Auto}" IsChecked="{Binding AutoConnect}" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}">
                                    <md:ToggleButtonAssist.OnContent>
                                        <md:PackIcon Kind="Check" />
                                    </md:ToggleButtonAssist.OnContent>
                                </ToggleButton>
                                <ComboBox Margin="30,0,0,0" md:HintAssist.Hint="{StaticResource Interval}" MinWidth="100" IsEditable="False" ItemsSource="{Binding IntervalList}" ToolTip="{StaticResource Interval}" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.Text>
                                        <Binding Path="PollTime" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <cvt:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                <cvt:IntValidationRule ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                <StackPanel Orientation="Horizontal" Margin="5">
                                    <TextBlock VerticalAlignment="Center" Text="{StaticResource optLight}" />
                                    <ToggleButton Margin="5,0,5,0" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}"
                                                  IsChecked="{Binding DarkTheme}" Command="{Binding ClickBaseCommand}" 
                                                  CommandParameter="{Binding RelativeSource={RelativeSource Self}, Path=IsChecked}" />
                                    <TextBlock VerticalAlignment="Center" Text="{StaticResource optDark}" />
                                </StackPanel>
                                <ComboBox Margin="20,0,0,0" MinWidth="130"  md:HintAssist.Hint="{StaticResource optPrimaryColor}" ItemsSource="{Binding PrimaryColors}" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ToolTip="{StaticResource optPrimaryColor}">
                                    <ComboBox.SelectedItem>
                                        <Binding Path="PrimaryColor" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                    </ComboBox.SelectedItem>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type mdc:Swatch}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <md:PackIcon Grid.Column="0" Kind="CameraIris" Width="20" Height="20" Foreground="{Binding ExemplarHue.Color, Converter={StaticResource ColorToBrush}}" />
                                                <TextBlock Grid.Column="1" Margin="10,0,0,0" Text="{Binding Name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <ComboBox Margin="30,0,0,0" IsEnabled="True" MinWidth="130" md:HintAssist.Hint="{StaticResource optAccentColor}" ToolTip="{StaticResource optAccentColor}" ItemsSource="{Binding AccentColors}" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.SelectedItem>
                                        <Binding Path="AccentColor" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                    </ComboBox.SelectedItem>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate DataType="{x:Type mdc:Swatch}">
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <md:PackIcon Grid.Column="0" Kind="CameraIris" Width="20" Height="20" Foreground="{Binding ExemplarHue.Color, Converter={StaticResource ColorToBrush}}" />
                                                <TextBlock Grid.Column="1" Margin="10,0,0,0" Text="{Binding Name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                            </StackPanel>
                            <StackPanel Grid.Row="4" Orientation="Horizontal">
                                <ComboBox  md:HintAssist.Hint="{StaticResource dModelType}" MinWidth="150" Margin="15,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"  ToolTip="{StaticResource dModelType}" ItemsSource="{Binding Source={domain:EnumBindingSource {x:Type helpers:Model3DType}}}" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                <ComboBox.Text>
                                    <Binding Path="ModelType" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                </ComboBox.Text>
                                <ComboBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ComboBox.ItemsPanel>
                            </ComboBox>
                                <ComboBox Margin="30,0,0,0" md:HintAssist.Hint="{StaticResource Language}" MinWidth="80" HorizontalAlignment="Left" ItemsSource="{Binding Languages}" Style="{StaticResource MaterialDesignFloatingHintComboBox}" ToolTip="{StaticResource Language}">
                                    <ComboBox.Text>
                                        <Binding Path="Lang" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" />
                                    </ComboBox.Text>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <Label Margin="30,0,0,5" Content="{StaticResource FlipCard}" VerticalAlignment="Bottom" ContentStringFormat='{}{0}:' />
                                <ToggleButton Margin="5,0,0,7" VerticalAlignment="Bottom" ToolTip="{StaticResource FlipCard}" IsChecked="{Binding FlipCardVis}" Style="{StaticResource MaterialDesignSwitchAccentToggleButton}">
                                <md:ToggleButtonAssist.OnContent>
                                    <md:PackIcon Kind="Check" />
                                </md:ToggleButtonAssist.OnContent>
                            </ToggleButton>
                            </StackPanel>
                            <StackPanel Grid.Row="5" Grid.Column="0" Orientation="Horizontal" >
                                <Label Margin="10,0,0,10" Content="{StaticResource Offsets}" VerticalAlignment="Bottom"/>
                                <ComboBox Margin="20,0,0,0" md:HintAssist.Hint="RA" MinWidth="50" IsEditable="False" ItemsSource="{Binding YAxisOffsetList}" ToolTip="Ra" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.Text>
                                        <Binding Path="YOffset" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <cvt:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                <cvt:IntValidationRule ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <ComboBox Margin="20,0,0,0" md:HintAssist.Hint="Dec" MinWidth="50" IsEditable="False" ItemsSource="{Binding XAxisOffsetList}" ToolTip="Dec" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.Text>
                                        <Binding Path="XOffset" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <cvt:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                <cvt:IntValidationRule ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>
                                <!--<ComboBox Margin="20,0,0,0" md:HintAssist.Hint="Z" MinWidth="50" IsEditable="False" ItemsSource="{Binding ZAxisOffsetList}" ToolTip="X" Style="{StaticResource MaterialDesignFloatingHintComboBox}">
                                    <ComboBox.Text>
                                        <Binding Path="zAxisOffset" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <cvt:NotEmptyValidationRule ValidatesOnTargetUpdated="True" />
                                                <cvt:IntValidationRule ValidatesOnTargetUpdated="True" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </ComboBox.Text>
                                    <ComboBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <VirtualizingStackPanel />
                                        </ItemsPanelTemplate>
                                    </ComboBox.ItemsPanel>
                                </ComboBox>-->
                            </StackPanel>

                            <!-- axes 0 and 1 are the used positions, uncomment to show in settings-->
                            <!-- <StackPanel Grid.Row="6" Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                <Label Margin="10,0,0,0" VerticalAlignment="Bottom" Content="Axis0:" />
                                <Label Margin="10,0,0,0" Width="200" VerticalAlignment="Bottom" Content="{Binding Axis0}" />
                                <Label Margin="10,0,0,0" VerticalAlignment="Bottom" Content="Axis1:" />
                                <Label Margin="10,0,0,0" Width="200" VerticalAlignment="Bottom" Content="{Binding Axis1}" />
                            </StackPanel>-->
                            <!--these are the two possible positions for a gem-->
                            <!--<StackPanel Grid.Row="7" Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                <Label Margin="10,0,0,0" VerticalAlignment="Bottom" Content="Axis2:" />
                                <Label Margin="10,0,0,0" Width="200" VerticalAlignment="Bottom" Content="{Binding Axis2}" />
                                <Label Margin="10,0,0,0" VerticalAlignment="Bottom" Content="Axis3" />
                                <Label Margin="10,0,0,0" Width="200" VerticalAlignment="Bottom" Content="{Binding Axis3}" />
                            </StackPanel>
                            <StackPanel Grid.Row="8" Grid.Column="0" Orientation="Horizontal" Margin="10,0,0,0" VerticalAlignment="Center">
                                <Label Margin="10,0,0,0" VerticalAlignment="Bottom" Content="Axis4:" />
                                <Label Margin="10,0,0,0" Width="200" VerticalAlignment="Bottom" Content="{Binding Axis4}" />
                                <Label Margin="10,0,0,0" VerticalAlignment="Bottom" Content="Axis5:" />
                                <Label Margin="10,0,0,0" Width="200" VerticalAlignment="Bottom" Content="{Binding Axis5}" />
                            </StackPanel>-->

                            <TextBlock Grid.Row="6" FontSize="16" Margin="15">
                                <Span xml:space="preserve"><Hyperlink Command="{Binding ClickDonateCmd}">Click to Donate</Hyperlink></Span>
                            </TextBlock>

                            <Button Grid.Row="7" ToolTip="Test" Content="Test" VerticalAlignment="Bottom" Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickTestCmd}"/>

                        </Grid>
                    </md:DrawerHost.LeftDrawerContent>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="0" Orientation="Horizontal">
                            <ToggleButton IsChecked="False" x:Name="MenuToggleButton" Command="{x:Static md:DrawerHost.OpenDrawerCommand}" Style="{StaticResource MaterialDesignHamburgerToggleButton}" CommandParameter="{x:Static Dock.Left}" ToolTip="{StaticResource dSettings}" />
                            <Label Margin="0,0,0,5" Opacity=".5" Content="{Binding Description}" VerticalAlignment="Bottom" HorizontalAlignment="Left" Visibility="{Binding DescriptionVis, Converter={StaticResource BoolToClap}}" />
                        </StackPanel>
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,0,8">
                            <md:Badged Badge="{Binding ConnectBadgeContent}" BadgePlacementMode="TopRight" VerticalAlignment="Bottom" ToolTip="{StaticResource On}">
                                <Button Height="25" ToolTip="Connect" VerticalAlignment="Center"  Style="{StaticResource MaterialDesignRaisedDarkButton}" Command="{Binding ClickConnectCmd}" >
                                    <md:PackIcon Kind="Telescope" />
                                </Button>
                            </md:Badged>
                            <Button Height="25" Margin="14,12,10,0" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource MaterialDesignRaisedDarkButton}"  ToolTip="{StaticResource dResetView}" Command="{Binding OpenResetViewCmd}" IsEnabled="{Binding ModelOn}" >
                            <md:PackIcon Kind="Resize" />
                        </Button>
                        </StackPanel>
                        <controls:HelixViewport3D Grid.Row="1" IsEnabled="{Binding ModelOn}">
                            <controls:HelixViewport3D.Style>
                                <Style TargetType="controls:HelixViewport3D">
                                    <Style.Triggers>
                                        <Trigger Property="IsEnabled" Value="False">
                                            <Setter Property="Opacity" Value="0.2" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="True">
                                            <Setter Property="Opacity" Value="1.0" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </controls:HelixViewport3D.Style>
                        </controls:HelixViewport3D>
                        <md:Flipper  Visibility="{Binding FlipCardVis, Converter={StaticResource BoolToClap}}" Grid.Row="1" Style="{DynamicResource MaterialDesignCardFlipper}" Margin="10" VerticalAlignment="Bottom"  HorizontalAlignment="Left" >
                            <md:Flipper.FrontContent>
                                <Border MinWidth="150" Margin="3" CornerRadius="5" BorderThickness="3" BorderBrush="DimGray" Opacity=".8" Background="{StaticResource MaterialDesignToolBarBackground}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <DockPanel Grid.Row="0" Visibility="{Binding RaVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource topRaShort}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding RightAscension}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="1" Visibility="{Binding DecVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource topDecShort}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding Declination}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="2" Visibility="{Binding AzVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource topAz}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding Azimuth}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="3" Visibility="{Binding AltVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource topAlt}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding Altitude}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="4" Visibility="{Binding LhaVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource topLha}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding Lha}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="5" Visibility="{Binding SopVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource Sop}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding Sop}" Foreground="Red" HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="6" Visibility="{Binding SideVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource SideRealTime}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding SiderealTime}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel Grid.Row="7" Visibility="{Binding RaAxisVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource dRaAxis}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding DegX}" Foreground="Red"  HorizontalAlignment="Right" />
                                        </DockPanel>
                                        <DockPanel  Grid.Row="8" Visibility="{Binding DecAxisVis, Converter={StaticResource BoolToClap}}">
                                            <TextBlock Text="{Binding Source={StaticResource dDecAxis}, StringFormat='{}{0}:'}" HorizontalAlignment="Left" />
                                            <TextBlock Margin="10,0,0,0" Text="{Binding DegY}" Foreground="Red"  HorizontalAlignment="Right"/>
                                        </DockPanel>
                                        <Button Grid.Row="9" Height="27" Style="{StaticResource MaterialDesignFlatButton}" Command="{x:Static md:Flipper.FlipCommand}" ToolTip="{StaticResource dEdit}" >
                                            <md:PackIcon Kind="Edit" Height="20" Width="20" />
                                        </Button>
                                    </Grid>
                                </Border>
                            </md:Flipper.FrontContent>
                            <md:Flipper.BackContent>
                                <Border MinWidth="150" MinHeight="170" Margin="3" CornerRadius="5" BorderThickness="3" BorderBrush="DimGray" Opacity=".8" Background="{StaticResource MaterialDesignToolBarBackground}">
                                    <Grid Margin="10">
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition />
                                            <RowDefinition Height="30"/>
                                        </Grid.RowDefinitions>
                                        <CheckBox Grid.Row="0" Content="{StaticResource topRaShort}" IsChecked="{Binding Path=RaVis}" />
                                        <CheckBox Grid.Row="1" Content="{StaticResource topDecShort}" IsChecked="{Binding Path=DecVis}" />
                                        <CheckBox Grid.Row="2" Content="{StaticResource topAz}" IsChecked="{Binding Path=AzVis}" />
                                        <CheckBox Grid.Row="3" Content="{StaticResource topAlt}" IsChecked="{Binding Path=AltVis}" />
                                        <CheckBox Grid.Row="4" Content="{StaticResource topLha}" IsChecked="{Binding Path=LhaVis}" />
                                        <CheckBox Grid.Row="5" Content="{StaticResource SideRealTime}" IsChecked="{Binding Path=SideVis}" />
                                        <CheckBox Grid.Row="6" Content="{StaticResource dRaAxis}" IsChecked="{Binding Path=RaAxisVis}" />
                                        <CheckBox Grid.Row="7" Content="{StaticResource dDecAxis}" IsChecked="{Binding Path=DecAxisVis}" />
                                        <CheckBox Grid.Row="8" Content="{StaticResource Sop}" IsChecked="{Binding Path=SopVis}" />
                                        <CheckBox Grid.Row="9" Content="{StaticResource topName}" IsChecked="{Binding Path=DescriptionVis}" />
                                        <CheckBox Grid.Row="10" Content="{StaticResource dCamera}" IsChecked="{Binding Path=CameraVis}" />
                                        <Button Grid.Row="11" Style="{StaticResource MaterialDesignToolForegroundButton}" Command="{x:Static md:Flipper.FlipCommand}" HorizontalAlignment="Left">
                                            <md:PackIcon Kind="ArrowLeft" HorizontalAlignment="Right" Width="30" Height="30" />
                                        </Button>
                                    </Grid>
                                </Border>
                            </md:Flipper.BackContent>
                        </md:Flipper>
                    </Grid>
                </md:DrawerHost>
            </Grid>
        </md:DialogHost>
    </Grid>
</Window>
